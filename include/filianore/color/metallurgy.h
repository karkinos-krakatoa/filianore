#ifndef _METALLURGY_H
#define _METALLURGY_H

#include <vector>
#include <string>
#include <map>
#include <utility>
#include "principalspectrum.h"

namespace filianore
{
    inline PrincipalSpectrum GoldEta, GoldK;
    const int Gold_nSamples = 56;
    const float Gold_Lambda[Gold_nSamples] = {
        298.757050f,
        302.400421f,
        306.133759f,
        309.960449f,
        313.884003f,
        317.908142f,
        322.036835f,
        326.274139f,
        330.624481f,
        335.092377f,
        339.682678f,
        344.400482f,
        349.251221f,
        354.240509f,
        359.374420f,
        364.659332f,
        370.102020f,
        375.709625f,
        381.489777f,
        387.450562f,
        393.600555f,
        399.948975f,
        406.505493f,
        413.280579f,
        420.285339f,
        427.531647f,
        435.032196f,
        442.800629f,
        450.851562f,
        459.200653f,
        467.864838f,
        476.862213f,
        486.212463f,
        495.936707f,
        506.057861f,
        516.600769f,
        527.592224f,
        539.061646f,
        551.040771f,
        563.564453f,
        576.670593f,
        590.400818f,
        604.800842f,
        619.920898f,
        635.816284f,
        652.548279f,
        670.184753f,
        688.800964f,
        708.481018f,
        729.318665f,
        751.419250f,
        774.901123f,
        799.897949f,
        826.561157f,
        855.063293f,
        885.601257f};
    const float Gold_Eta[Gold_nSamples] = {
        1.795000f,
        1.812000f,
        1.822625f,
        1.830000f,
        1.837125f,
        1.840000f,
        1.834250f,
        1.824000f,
        1.812000f,
        1.798000f,
        1.782000f,
        1.766000f,
        1.752500f,
        1.740000f,
        1.727625f,
        1.716000f,
        1.705875f,
        1.696000f,
        1.684750f,
        1.674000f,
        1.666000f,
        1.658000f,
        1.647250f,
        1.636000f,
        1.628000f,
        1.616000f,
        1.596250f,
        1.562000f,
        1.502125f,
        1.426000f,
        1.345875f,
        1.242000f,
        1.086750f,
        0.916000f,
        0.754500f,
        0.608000f,
        0.491750f,
        0.402000f,
        0.345500f,
        0.306000f,
        0.267625f,
        0.236000f,
        0.212375f,
        0.194000f,
        0.177750f,
        0.166000f,
        0.161000f,
        0.160000f,
        0.160875f,
        0.164000f,
        0.169500f,
        0.176000f,
        0.181375f,
        0.188000f,
        0.198125f,
        0.210000f};
    const float Gold_K[Gold_nSamples] = {
        1.920375f,
        1.920000f,
        1.918875f,
        1.916000f,
        1.911375f,
        1.904000f,
        1.891375f,
        1.878000f,
        1.868250f,
        1.860000f,
        1.851750f,
        1.846000f,
        1.845250f,
        1.848000f,
        1.852375f,
        1.862000f,
        1.883000f,
        1.906000f,
        1.922500f,
        1.936000f,
        1.947750f,
        1.956000f,
        1.959375f,
        1.958000f,
        1.951375f,
        1.940000f,
        1.924500f,
        1.904000f,
        1.875875f,
        1.846000f,
        1.814625f,
        1.796000f,
        1.797375f,
        1.840000f,
        1.956500f,
        2.120000f,
        2.326250f,
        2.540000f,
        2.730625f,
        2.880000f,
        2.940625f,
        2.970000f,
        3.015000f,
        3.060000f,
        3.070000f,
        3.150000f,
        3.445812f,
        3.800000f,
        4.087687f,
        4.357000f,
        4.610188f,
        4.860000f,
        5.125813f,
        5.390000f,
        5.631250f,
        5.880000f};

    inline PrincipalSpectrum CopperEta, CopperK;
    const int Copper_nSamples = 56;
    const float Copper_Lambda[Copper_nSamples] = {
        298.757050f,
        302.400421f,
        306.133759f,
        309.960449f,
        313.884003f,
        317.908142f,
        322.036835f,
        326.274139f,
        330.624481f,
        335.092377f,
        339.682678f,
        344.400482f,
        349.251221f,
        354.240509f,
        359.374420f,
        364.659332f,
        370.102020f,
        375.709625f,
        381.489777f,
        387.450562f,
        393.600555f,
        399.948975f,
        406.505493f,
        413.280579f,
        420.285339f,
        427.531647f,
        435.032196f,
        442.800629f,
        450.851562f,
        459.200653f,
        467.864838f,
        476.862213f,
        486.212463f,
        495.936707f,
        506.057861f,
        516.600769f,
        527.592224f,
        539.061646f,
        551.040771f,
        563.564453f,
        576.670593f,
        590.400818f,
        604.800842f,
        619.920898f,
        635.816284f,
        652.548279f,
        670.184753f,
        688.800964f,
        708.481018f,
        729.318665f,
        751.419250f,
        774.901123f,
        799.897949f,
        826.561157f,
        855.063293f,
        885.601257f};
    const float Copper_Eta[Copper_nSamples] = {
        1.400313f,
        1.380000f,
        1.358438f,
        1.340000f,
        1.329063f,
        1.325000f,
        1.332500f,
        1.340000f,
        1.334375f,
        1.325000f,
        1.317812f,
        1.310000f,
        1.300313f,
        1.290000f,
        1.281563f,
        1.270000f,
        1.249062f,
        1.225000f,
        1.200000f,
        1.180000f,
        1.174375f,
        1.175000f,
        1.177500f,
        1.180000f,
        1.178125f,
        1.175000f,
        1.172812f,
        1.170000f,
        1.165312f,
        1.160000f,
        1.155312f,
        1.150000f,
        1.142812f,
        1.135000f,
        1.131562f,
        1.120000f,
        1.092437f,
        1.040000f,
        0.950375f,
        0.826000f,
        0.645875f,
        0.468000f,
        0.351250f,
        0.272000f,
        0.230813f,
        0.214000f,
        0.209250f,
        0.213000f,
        0.216250f,
        0.223000f,
        0.236500f,
        0.250000f,
        0.254188f,
        0.260000f,
        0.280000f,
        0.300000f};
    const float Copper_K[Copper_nSamples] = {
        1.662125f,
        1.687000f,
        1.703313f,
        1.720000f,
        1.744563f,
        1.770000f,
        1.791625f,
        1.810000f,
        1.822125f,
        1.834000f,
        1.851750f,
        1.872000f,
        1.894250f,
        1.916000f,
        1.931688f,
        1.950000f,
        1.972438f,
        2.015000f,
        2.121562f,
        2.210000f,
        2.177188f,
        2.130000f,
        2.160063f,
        2.210000f,
        2.249938f,
        2.289000f,
        2.326000f,
        2.362000f,
        2.397625f,
        2.433000f,
        2.469187f,
        2.504000f,
        2.535875f,
        2.564000f,
        2.589625f,
        2.605000f,
        2.595562f,
        2.583000f,
        2.576500f,
        2.599000f,
        2.678062f,
        2.809000f,
        3.010750f,
        3.240000f,
        3.458187f,
        3.670000f,
        3.863125f,
        4.050000f,
        4.239563f,
        4.430000f,
        4.619563f,
        4.817000f,
        5.034125f,
        5.260000f,
        5.485625f,
        5.717000f};

    void
    InitializeForge();

    std::pair<PrincipalSpectrum, PrincipalSpectrum> GetMetalCoefficientsFromForge(int value);
}

#endif